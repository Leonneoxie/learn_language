"""
collect readme

copy such as:
coderunner/README.rst -> source/coderunner.rst
../README.rst -> index.rst
"""
import os
import shutil

INDEX = "source/index.rst"
toc = []

def copy_readme(src, dst=None):
    if not dst:
        dst = os.path.split(src)[1]
    toc.append(dst)
    if os.path.isdir(src):
        src = os.path.join(src, "README.rst")

    shutil.copy(src, "source/%s.rst" % dst)

def make_toc(xs):
    buf = [".. toctree::", "   :maxdepth: 2\n"]
    for x in xs:
        buf.append("   %s" % x)
    return "\n".join(buf)

def update_toc():
    data = file(INDEX).read()
    data = data.replace(
        ".. toctree::", make_toc(toc))
    file(INDEX, "w").write(data)

def main():
    shutil.copy("../README.rst", INDEX)
    copy_readme("../coderunner")
    copy_readme("../doc")
    toc.append("test_index") # generated by collect_tests
    update_toc()

if __name__ == "__main__":
    main()
